[General]
network = scenarios.networks.Scenario_USA
debug-on-errors = true

output-vector-file = ${resultdir}/${inifile}/${inifile}-${runnumber}.vec
output-scalar-file = ${resultdir}/${inifile}/${inifile}-${runnumber}.sca

sim-time-limit = 1800s
repeat = 1
seed-set = ${repetition}


**.numClients = 1


**.rtt.result-recording-modes = +vector,-stats
**.queueSize.result-recording-modes = +vector,+stats
**.bufferSize.result-recording-modes = +vector,+stats
**.waitingTime.result-recording-modes = +vector,+stats

**.nodeInNumPaths**.scalar-recording = true
**.avgPathLength.scalar-recording = true
**.minPathLength.scalar-recording = true
**.maxPathLength.scalar-recording = true
**.numClients.scalar-recording = true
**.numPaths.scalar-recording = true

**.flowTable**.scalar-recording = true

**.packets.result-recording-modes = +count
**.packetBytes.result-recording-modes = +sum
**.packets*.scalar-recording = true
**.packetBytes*.scalar-recording = true

**.numPacketIn*.scalar-recording = true

**.bufferSize*.vector-recording = true
**.queueSize*.vector-recording = true
**.waitingTime*.vector-recording = true

**.pingApp[*].rtt*.vector-recording = true


**.controllerApps[*].*.scalar-recording = true
**.pingApp[*].numLost*.scalar-recording = true
**.pingApp[*].numOutOfOrderArrivals*.scalar-recording = true

**.vector-recording = false
**.scalar-recording = false


**.spanningTree.NodeType = "openflow.nodes.Open_Flow_Domain"
**.spanningTree.startNode = 4
**.highlightActivePorts = true

# random ping application
**.client[*].numPingApps = 1
**.client[*].pingApp[*].typename = "PingAppRandom"
**.client[*].pingApp[*].sendInterval = 2s
**.client[*].pingApp[*].startTime = uniform(100s,120s)



#openflow params
**.open_flow_switch.OF_Switch.connectAddress = "open_flow_controller1"
**.open_flow_switch.OF_Switch.connectAt = uniform(0s,1s)
**.open_flow_switch.etherMAC[*].promiscuous = true

# 404bytes see imix and buffer size of 1.5mb see hp switch 1500000/404
**.OF_Switch.bufferCapacity = 3712


**.OF_Switch.serviceTime = 0.000035s * (${switchServiceTimeFactor= 25,50,75,100,125,150,175,200,225,250,275,300})


#1800 00 requests per second on 8xcores 8xthreads and 32 switches (hotice2012-final)
**.open_flow_controller*.serviceTime = 0.000005556s *(${controllerServiceTimeFactor= 25,50,75,100,125,150,175,200,225,250,275,300 !switchServiceTimeFactor})



**.open_flow_controller*.numControllerApps = 2
**.open_flow_controller*.controllerApps[0].typename = "LLDPForwarding"
**.open_flow_controller*.controllerApps[0].printMibGraph = true
#refer to beacon leraning switch code
**.open_flow_controller*.controllerApps[0].flowModIdleTimeOut = 5
**.open_flow_controller*.controllerApps[0].dropIfNoRouteFound = true

**.open_flow_controller*.controllerApps[1].typename = "LLDPAgent"
**.open_flow_controller*.controllerApps[1].flowModIdleTimeOut = 140





# NIC configuration
**.ppp[*].queue.frameCapacity = 10  # in routers
**.open_flow_switch*.tcp.mss = 800


#linux mint 15 std value
**.arp.cacheTimeout = 60s


# configure control and data plane interfaces separately
*.configurator.config = xmldoc("ipv4config.xml")
