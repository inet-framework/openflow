[General]
network = scenarios.networks.Scenario_USA_KN

output-vector-file = ${resultdir}/${inifile}/${inifile}-${runnumber}.vec
output-scalar-file = ${resultdir}/${inifile}/${inifile}-${runnumber}.sca

sim-time-limit = 1800s
repeat = 4
seed-set = ${repetition}

**.numControllers = 4

**.numClients = 2


**.rtt.result-recording-modes = +vector,-stats
**.queueSize.result-recording-modes = +vector,+stats
**.bufferSize.result-recording-modes = +vector,+stats
**.waitingTime.result-recording-modes = +vector,+stats

**.nodeInNumPaths**.scalar-recording = true
**.avgPathLength.scalar-recording = true
**.minPathLength.scalar-recording = true
**.maxPathLength.scalar-recording = true
**.numClients.scalar-recording = true
**.numPaths.scalar-recording = true

**.packets.result-recording-modes = +count
**.packetBytes.result-recording-modes = +sum
**.packets*.scalar-recording = true
**.packetBytes*.scalar-recording = true

**.numPacketIn*.scalar-recording = true

**.bufferSize*.vector-recording = true
**.queueSize*.vector-recording = true
**.waitingTime*.vector-recording = true

**.flowTable**.scalar-recording = true

**.pingApp[*].rtt*.vector-recording = true


**.controllerApps[*].*.scalar-recording = true
**.pingApp[*].numLost*.scalar-recording = true
**.pingApp[*].numOutOfOrderArrivals*.scalar-recording = true

**.vector-recording = false
**.scalar-recording = false


**.spanningTree.NodeType = "openflow.nodes.Open_Flow_Domain"
**.spanningTree.startNode = 4
**.highlightActivePorts = true

# random ping application
**.client[*].numPingApps = 1
**.client[*].pingApp[*].typename = "PingAppRandom"
**.client[*].pingApp[*].sendInterval = 1s
**.client[*].pingApp[*].startTime = uniform(100s,120s)



#openflow params
**.ofs_Albuqerque.open_flow_switch*.OF_Switch.connectAddress = "open_flow_controller2"
**.ofs_Ashburn.open_flow_switch*.OF_Switch.connectAddress = "open_flow_controller3"
**.ofs_Atlanta.open_flow_switch*.OF_Switch.connectAddress = "open_flow_controller4"
**.ofs_BatonRouge.open_flow_switch*.OF_Switch.connectAddress = "open_flow_controller4"
**.ofs_Boston.open_flow_switch*.OF_Switch.connectAddress = "open_flow_controller3"
**.ofs_Buffalo.open_flow_switch*.OF_Switch.connectAddress = "open_flow_controller3"
**.ofs_Chicago.open_flow_switch*.OF_Switch.connectAddress = "open_flow_controller3"
**.ofs_Cleveland.open_flow_switch*.OF_Switch.connectAddress = "open_flow_controller3"
**.ofs_Dallas.open_flow_switch*.OF_Switch.connectAddress = "open_flow_controller3"
**.ofs_Denver.open_flow_switch*.OF_Switch.connectAddress = "open_flow_controller2"
**.ofs_ElPaso.open_flow_switch*.OF_Switch.connectAddress = "open_flow_controller2"
**.ofs_Houston.open_flow_switch*.OF_Switch.connectAddress = "open_flow_controller2"
**.ofs_Indianapolis.open_flow_switch*.OF_Switch.connectAddress ="open_flow_controller3"
**.ofs_Jackson.open_flow_switch*.OF_Switch.connectAddress ="open_flow_controller4"
**.ofs_Jacksonville.open_flow_switch*.OF_Switch.connectAddress ="open_flow_controller4"
**.ofs_KansasCity.open_flow_switch*.OF_Switch.connectAddress ="open_flow_controller3"
**.ofs_LosAngeles.open_flow_switch*.OF_Switch.connectAddress ="open_flow_controller2"
**.ofs_Louisville.open_flow_switch*.OF_Switch.connectAddress ="open_flow_controller3"
**.ofs_Memphis.open_flow_switch*.OF_Switch.connectAddress ="open_flow_controller4"
**.ofs_Miami.open_flow_switch*.OF_Switch.connectAddress ="open_flow_controller4"
**.ofs_Minneapolis.open_flow_switch*.OF_Switch.connectAddress ="open_flow_controller3"
**.ofs_Missoula.open_flow_switch*.OF_Switch.connectAddress ="open_flow_controller1"
**.ofs_Nashville.open_flow_switch*.OF_Switch.connectAddress ="open_flow_controller4"
**.ofs_NewYork.open_flow_switch*.OF_Switch.connectAddress ="open_flow_controller4"
**.ofs_Philadelphia.open_flow_switch*.OF_Switch.connectAddress ="open_flow_controller4"
**.ofs_Phoenix.open_flow_switch*.OF_Switch.connectAddress ="open_flow_controller2"
**.ofs_Pittsburgh.open_flow_switch*.OF_Switch.connectAddress ="open_flow_controller3"
**.ofs_Portland.open_flow_switch*.OF_Switch.connectAddress ="open_flow_controller1"
**.ofs_Raleigh.open_flow_switch*.OF_Switch.connectAddress ="open_flow_controller4"
**.ofs_SaltLakeCity.open_flow_switch*.OF_Switch.connectAddress ="open_flow_controller1"
**.ofs_Seattle.open_flow_switch*.OF_Switch.connectAddress ="open_flow_controller1"
**.ofs_Sunnyvale.open_flow_switch*.OF_Switch.connectAddress ="open_flow_controller1"
**.ofs_Vancouver.open_flow_switch*.OF_Switch.connectAddress ="open_flow_controller1"
**.ofs_WashingtonDC.open_flow_switch*.OF_Switch.connectAddress ="open_flow_controller4"

**.open_flow_switch.OF_Switch.connectAt = uniform(0s,1s)
**.open_flow_switch.etherMAC[*].promiscuous = true

# 404bytes see imix and buffer size of 1.5mb see hp switch 1500000/404
**.OF_Switch.bufferCapacity = 3712


**.OF_Switch.serviceTime = 0.000035s

#1800 00 requests per second on 8xcores 8xthreads and 32 switches (hotice2012-final)
**.open_flow_controller*.serviceTime = 0.000005556s * (${cstFaktor= 539.9568034557,719.9424046076,809.9352051836,899.9280057595,989.9208063355,1079.913606915,1259.8992080634})

**.open_flow_controller*.numControllerApps = 3
**.open_flow_controller*.controllerApps[0].typename = "KN_LLDPForwarding"
#refer to beacon leraning switch code
**.open_flow_controller*.controllerApps[0].flowModIdleTimeOut = 5
**.open_flow_controller*.controllerApps[0].ignoreArpRequests = true

**.open_flow_controller*.controllerApps[1].typename = "KN_LLDPAgent"
**.open_flow_controller*.controllerApps[1].flowModIdleTimeOut = 140

**.open_flow_controller*.controllerApps[2].typename = "KN_ARPResponder"

**.open_flow_controller*.numTcpControllerApps = 1
**.open_flow_controller*.tcpControllerApps[0].typename = "KandooAgent"
**.open_flow_controller*.tcpControllerApps[0].connectAddressRootController = "root"
**.open_flow_controller*.tcpControllerApps[0].serviceTime=0.000005556s * (${knlFaktor= 539.9568034557,719.9424046076,809.9352051836,899.9280057595,989.9208063355,1079.913606915,1259.8992080634 !cstFaktor})


#root controller
#1800 00 requests per second on 8xcores 8xthreads and 32 switches (hotice2012-final)
**.root*.serviceTime = 0.000005556s * (${cstRFaktor= 539.9568034557,719.9424046076,809.9352051836,899.9280057595,989.9208063355,1079.913606915,1259.8992080634 !cstFaktor})


**.root*.numControllerApps = 3
**.root*.controllerApps[0].typename = "KN_LLDPForwarding"
#refer to beacon leraning switch code
**.root*.controllerApps[0].flowModIdleTimeOut = 5
**.root*.controllerApps[0].ignoreArpRequests = true

**.root*.controllerApps[1].typename = "KN_LLDPAgent"
**.root*.controllerApps[1].flowModIdleTimeOut = 140

**.root*.controllerApps[2].typename = "KN_ARPResponder"

**.root*.numTcpControllerApps = 1
**.root*.tcpControllerApps[0].typename = "KandooAgent"
**.root*.tcpControllerApps[0].connectAddressRootController = "root"
**.root*.tcpControllerApps[0].serviceTime=0.000005556s * (${knRFaktor= 539.9568034557,719.9424046076,809.9352051836,899.9280057595,989.9208063355,1079.913606915,1259.8992080634 !cstFaktor})
**.root*.tcpControllerApps[0].isRootController = true




# NIC configuration
**.ppp[*].queue.frameCapacity = 10  # in routers
**.open_flow_switch*.tcp.mss = 800


#linux mint 15 std value
**.arp.cacheTimeout = 60s

# configure control and data plane interfaces separately
*.configurator.config = xmldoc("ipv4config.xml")
